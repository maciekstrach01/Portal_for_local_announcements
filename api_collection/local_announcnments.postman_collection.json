{
	"info": {
		"_postman_id": "617e9651-78fc-4ef9-bf72-a3470c13b609",
		"name": "local_announcnments",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35034326"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response",
									"var jsonData = pm.response.json();",
									"",
									"// Check if the access token exists in the response and save it into a collection variable",
									"if (jsonData.accessToken) {",
									"    pm.collectionVariables.set(\"access_token\", jsonData.accessToken);",
									"    console.log(\"Access token saved to collection variable: \" + jsonData.accessToken);",
									"} else {",
									"    console.log(\"Access token not found in response.\");",
									"}",
									"",
									"// Check if the refresh token exists in the response and save it into a collection variable",
									"if (jsonData.accessToken) {",
									"    pm.collectionVariables.set(\"refresh_token\", jsonData.refreshToken);",
									"    console.log(\"Refresh token saved to collection variable: \" + jsonData.refreshToken);",
									"} else {",
									"    console.log(\"Refresh token not found in response.\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"password\": \"password\",\n  \"confirmPassword\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/v1/auth/register",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response",
									"var jsonData = pm.response.json();",
									"",
									"// Check if the access token exists in the response and save it into a collection variable",
									"if (jsonData.accessToken) {",
									"    pm.collectionVariables.set(\"access_token\", jsonData.accessToken);",
									"    console.log(\"Access token saved to collection variable: \" + jsonData.accessToken);",
									"} else {",
									"    console.log(\"Access token not found in response.\");",
									"}",
									"",
									"// Check if the refresh token exists in the response and save it into a collection variable",
									"if (jsonData.refreshToken) {",
									"    pm.collectionVariables.set(\"refresh_token\", jsonData.refreshToken);",
									"    console.log(\"Refresh token saved to collection variable: \" + jsonData.refreshToken);",
									"} else {",
									"    console.log(\"Refresh token not found in response.\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/v1/auth/authenticate",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"auth",
								"authenticate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response",
									"var jsonData = pm.response.json();",
									"",
									"// Check if the access token exists in the response and save it into a collection variable",
									"if (jsonData.accessToken) {",
									"    pm.collectionVariables.set(\"access_token\", jsonData.accessToken);",
									"    console.log(\"Access token saved to collection variable: \" + jsonData.accessToken);",
									"} else {",
									"    console.log(\"Access token not found in response.\");",
									"}",
									"",
									"// Check if the refresh token exists in the response and save it into a collection variable",
									"if (jsonData.refreshToken) {",
									"    pm.collectionVariables.set(\"refresh_token\", jsonData.refreshToken);",
									"    console.log(\"Refresh token saved to collection variable: \" + jsonData.refreshToken);",
									"} else {",
									"    console.log(\"Refresh token not found in response.\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{refresh_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/v1/auth/refresh-token",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"auth",
								"refresh-token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check if the response status is 204 No Content",
									"if (pm.response.code === 204) {",
									"    // List of variables to clear",
									"    const variablesToClear = [\"access_token\", \"refresh_token\"];",
									"",
									"    // Clear each variable in the list",
									"    variablesToClear.forEach(variable => pm.collectionVariables.unset(variable));",
									"",
									"    console.log(\"Variables cleared due to 204 response.\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{refresh_token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/v1/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "auth (admin)",
			"item": [
				{
					"name": "Authenticate User (admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response",
									"var jsonData = pm.response.json();",
									"",
									"// Check if the access token exists in the response and save it into a collection variable",
									"if (jsonData.accessToken) {",
									"    pm.collectionVariables.set(\"access_token\", jsonData.accessToken);",
									"    console.log(\"Access token saved to collection variable: \" + jsonData.accessToken);",
									"} else {",
									"    console.log(\"Access token not found in response.\");",
									"}",
									"",
									"// Check if the refresh token exists in the response and save it into a collection variable",
									"if (jsonData.refreshToken) {",
									"    pm.collectionVariables.set(\"refresh_token\", jsonData.refreshToken);",
									"    console.log(\"Refresh token saved to collection variable: \" + jsonData.refreshToken);",
									"} else {",
									"    console.log(\"Refresh token not found in response.\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/v1/auth/authenticate",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"auth",
								"authenticate"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "user's profile",
			"item": [
				{
					"name": "Change Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"currentPassword\": \"password\",\n  \"newPassword\": \"newPassword\",\n  \"confirmNewPassword\": \"newPassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/v1/user/change-password",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"user",
								"change-password"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "category",
			"item": [
				{
					"name": "Create Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response",
									"var jsonData = pm.response.json();",
									"",
									"// Check if the access token exists in the response and save it into a collection variable",
									"if (jsonData.id) {",
									"    pm.collectionVariables.set(\"category_id\", jsonData.id);",
									"    console.log(\"Category id saved to collection variable: \" + jsonData.id);",
									"} else {",
									"    console.log(\"Category id not found in response.\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"New Category\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/v1/category",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch Category By Id",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"Patched Category\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/v1/category/:category_id",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"category",
								":category_id"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "category_id",
									"value": "{{category_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/v1/category",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Category By Id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/v1/category/:category_id",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"category",
								":category_id"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "category_id",
									"value": "{{category_id}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "announcement",
			"item": [
				{
					"name": "Create Announcement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the JSON response",
									"var jsonData = pm.response.json();",
									"",
									"// Check if the access token exists in the response and save it into a collection variable",
									"if (jsonData.id) {",
									"    pm.collectionVariables.set(\"announcement_id\", jsonData.id);",
									"    console.log(\"Announcement id saved to collection variable: \" + jsonData.id);",
									"} else {",
									"    console.log(\"Announcement id not found in response.\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Used Bike for Sale",
									"type": "text"
								},
								{
									"key": "categoryId",
									"value": "e22031b3-4bd9-49e7-b985-a4eb81f3a9ba",
									"type": "text"
								},
								{
									"key": "description",
									"value": "A well-maintained used bike in excellent condition.",
									"type": "text"
								},
								{
									"key": "price",
									"value": "150.00",
									"type": "text"
								},
								{
									"key": "phoneNumber",
									"value": "+48123123123",
									"type": "text"
								},
								{
									"key": "image",
									"type": "file",
									"src": "postman-cloud:///1efba2c4-93d8-42b0-a10c-dbe98e171770"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}:{{port}}/api/v1/announcement",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"announcement"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Announcements",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/v1/announcement",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"announcement"
							],
							"query": [
								{
									"key": "page",
									"value": "0",
									"disabled": true
								},
								{
									"key": "size",
									"value": "10",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": "TITLE",
									"disabled": true
								},
								{
									"key": "sortDirection",
									"value": "ASC",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Announcements By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}:{{port}}/api/v1/announcement/:announcement_id",
							"host": [
								"{{base_url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"announcement",
								":announcement_id"
							],
							"variable": [
								{
									"key": "announcement_id",
									"value": "{{announcement_id}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "category_id",
			"value": ""
		},
		{
			"key": "announcement_id",
			"value": ""
		},
		{
			"key": "access_token",
			"value": ""
		},
		{
			"key": "refresh_token",
			"value": ""
		}
	]
}